pub const R0: [(u64, u64); 3] = [
    (0,0),(1,1),(2,2)
];

// Reflexive relations (0-based indices)
pub const R1: [(u64, u64); 7] = [
    (0,0),(0,1),(0,2),
          (1,1),
    (2,0),(2,1),(2,2)
];

pub const R2: [(u64, u64); 7] = [
    (0,0),(0,2),
    (1,0),(1,1),(1,2),
    (2,0),      (2,2)
];

pub const R3: [(u64, u64); 7] = [
    (0,0),(0,1),(0,2),
    (1,0),(1,1),(1,2),
                (2,2)
];

pub const R4: [(u64, u64); 7] = [
    (0,0),(0,1),(0,2),
          (1,1),(1,2),
          (2,1),(2,2)
];

pub const R5: [(u64, u64); 7] = [
    (0,0),(0,1),
    (1,0),(1,1),
    (2,0),(2,1),(2,2)
];

pub const R6: [(u64, u64); 7] = [
    (0,0),
    (1,0),(1,1),(1,2),
    (2,0),(2,1),(2,2)
];

// Quasi-order relations
pub const R7: [(u64, u64); 6] = [
    (0,0),(0,1),(0,2),
          (1,1),(1,2),
                (2,2)
];

pub const R8: [(u64, u64); 6] = [
    (0,0),(0,1),(0,2),
          (1,1),
          (2,1),(2,2)
];

pub const R9: [(u64, u64); 6] = [
    (0,0),(0,1),
          (1,1),
    (2,0),(2,1),(2,2)
];

pub const R10: [(u64, u64); 6] = [
    (0,0),
    (1,0),(1,1),(1,2),
    (2,0),     (2,2)
];

pub const R11: [(u64, u64); 6] = [
    (0,0),
    (1,0),(1,1),
    (2,0),(2,1),(2,2)
];
//This is missing in the paper!!!
pub const R12:[(u64,u64);6] = [
    (0, 0),         (0, 2), 
    (1, 0), (1, 1), (1, 2), 
                    (2, 2)];

pub const R13: [(u64, u64); 5] = [
    (0,0),      (0,2),
          (1,1),
    (2,0),      (2,2)
];

pub const R14: [(u64, u64); 5] = [
    (0,0),(0,1),(0,2),
          (1,1),
                (2,2)
];
pub const R15: [(u64, u64); 5] = [
    (0,0),      (0,2),
          (1,1),(1,2),
                (2,2)
];

pub const R16: [(u64, u64); 5] = [
    (0,0),(0,1),
    (1,0),(1,1),
              (2,2)
];

pub const R17: [(u64, u64); 5] = [
    (0,0),
          (1,1),
    (2,0),(2,1),(2,2)
];

pub const R18: [(u64, u64); 5] = [
    (0,0),
          (1,1),(1,2),
          (2,1),(2,2)
];

pub const R19: [(u64, u64); 5] = [
    (0,0),
    (1,0),(1,1),(1,2),
                (2,2)
];

pub const R20: [(u64, u64); 5] = [
    (0,0),
    (1,0),(1,1),
    (2,0),      (2,2)
];

pub const R21: [(u64, u64); 5] = [
    (0,0),(0,1),
          (1,1),
          (2,1),(2,2)
];

pub const R22: [(u64, u64); 4] = [
    (0,0),
          (1,1),
    (2,0),      (2,2)
];

pub const R23: [(u64, u64); 4] = [
    (0,0),      (0,2),
          (1,1),
                (2,2)
];

pub const R24: [(u64, u64); 4] = [
    (0,0),
          (1,1),
          (2,1),(2,2)
];

pub const R25: [(u64, u64); 4] = [
    (0,0),
          (1,1),(1,2),
                (2,2)
];

pub const R26: [(u64, u64); 4] = [
    (0,0),(0,1),
          (1,1),
                (2,2)
];

pub const R27: [(u64, u64); 4] = [
    (0,0),
    (1,0),(1,1),
                (2,2)
];

pub const R28: [(u64, u64); 9] = [
    (0,0),(0,1),(0,2),
    (1,0),(1,1),(1,2),
    (2,0),(2,1),(2,2)
];


// Your existing const relations here … (R0, R1, … R28)

// A single static array holding references to all relations
pub static PRE_ORDERS_3: [&[(u64, u64)]; 29] = [
    &R0, &R1, &R2, &R3, &R4, &R5, &R6,
    &R7, &R8, &R9, &R10, &R11, &R12, &R13,
    &R14, &R15, &R16, &R17, &R18, &R19, &R20,
    &R21, &R22, &R23, &R24, &R25, &R26, &R27, &R28,
];
